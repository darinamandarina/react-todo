{"version":3,"sources":["CompletedTodos.js","AddTodoForm.js","ListOfToDo.js","App.js","serviceWorker.js","index.js"],"names":["CompletedTodos","compliteditem","this","props","react_default","a","createElement","key","className","onClick","handleClick","React","Component","AddTodoForm","state","value","handleOnChange","event","_this","setState","target","htmlFor","type","id","onChange","ListOfToDo","item","handleCheckbox","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","todoitem","checked","_ref","selectedItem","items","toConsumableArray","push","filter","addToDo","todo","e","preventDefault","_ref2","arrOfInputedData","console","log","deleteToDo","_ref3","deleteCompletedToDo","_ref4","_this2","build_default","parent","AddTodoForm_AddTodoForm","map","index","ListOfToDo_ListOfToDo","CompletedTodos_CompletedTodos","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2b712d5f.chunk.js","sourcesContent":["import React from 'react'; \r\n\r\nexport default class CompletedTodos extends React.Component{\r\n\trender(){\r\n\t\tconst {compliteditem} = this.props;\r\n\t\treturn(\r\n\t\t<div>\r\n\t\t\t<li key={compliteditem} className=\"listOfToDo__todoElm\">\r\n\t\t\t\t{compliteditem}\r\n\t\t\t\t<button onClick={this.props.handleClick(compliteditem)}>x</button>\r\n\t\t\t</li>\r\n\t\t\t\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nexport default class AddTodoForm extends React.Component{\r\n\tstate={\r\n\t\tvalue:''\r\n\t};\r\n\thandleOnChange = (event) =>{\r\n\t\tthis.setState({\r\n\t\t\tvalue: event.target.value,\r\n\t\t});\r\n\t};\r\n\t\r\n\t\r\n\trender(){\r\n\t\tconst {value} = this.state;\r\n\t\treturn(\r\n\t\t\t<form className=\"addToForm__form\">\r\n\t\t\t\t<label htmlFor=\"addToForm__input\"/>\r\n\t\t\t\t<input type=\"text\" id=\"addToForm__input\" value={value} onChange={this.handleOnChange}/>\r\n\t\t\t\t<button onClick={this.props.handleClick(value)}\r\n\t\t\t\t>Add</button>\r\n\t\t\t</form>\r\n\t\t)\r\n\t}\r\n}","import React from 'react';\r\n\r\nexport default class ListOfToDo extends React.Component{\r\n\t\r\n\trender(){\r\n\t\tconst {item} = this.props\r\n\t\treturn(\r\n\t\t\t\t<li key={item} className=\"listOfToDo__todoElm\">\r\n\t\t\t\t    <input type='checkbox' id={item} onChange={this.props.handleCheckbox(item)}/>\r\n\t\t\t\t\t<label htmlFor={item}>{item}</label>\r\n\t\t\t\t\t<button onClick={this.props.handleClick(item)}>x</button>\r\n\t\t\t</li>  \r\n\t\t    )\r\n\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport SimpleStorage from \"react-simple-storage\";\nimport CompletedTodos from './CompletedTodos';\nimport AddTodoForm from './AddTodoForm';\nimport ListOfToDo from './ListOfToDo';\n\n\nvar arrOfLocalStoredItems = [];\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tselectedItem:[],\n\t\t\titem:'',\n\t\t\titems:[]\n\t};\n\t}\n\t\n  handleCheckbox = (todoitem) => event =>  {\n\t  const {checked} = event.target;\n\t  this.setState(({ selectedItem }) => {\n\t\t  let items = [...selectedItem];\n\t\t  if (checked) {\n\t\t\titems.push(todoitem);\t\t\n\t\t  }else{\n\t\t\titems = items.filter(item=>item !== todoitem);  \n\t\t  }\n\t\t  return{\n\t\t\t  selectedItem:items,\n\t\t  };\n\t  });\n  };\n  addToDo = (todo)=>e=>{\n\t    e.preventDefault();\n\t\tthis.setState(({items})=>{\n          let arrOfInputedData = [...items];\t\t\t\n\t\t  arrOfInputedData.push(todo);\n\t\t  console.log(items);\n\t\t  return{\n\t\t\titems:arrOfInputedData,\n\t\t  }\n\t\t}); \t\n  };\n  deleteToDo=(todo)=>e=>{\n\t  e.preventDefault();\n\t  this.setState(({items})=>{\n\t\t  let arrOfInputedData = [...items];\t\t\t\n\t\t  arrOfInputedData = arrOfInputedData.filter(selectedItem=>selectedItem!==todo);\n\t\t  return{\n\t\t\t  items:arrOfInputedData,\n\t\t  }\n\t  })\n  };\n  deleteCompletedToDo=(todo)=>e=>{\n\t  e.preventDefault();\n\t  this.setState(({selectedItem})=>{\n        let arrOfInputedData = [...selectedItem];\n\t\tarrOfInputedData = arrOfInputedData.filter(selectedItem=>selectedItem!==todo);\n\t\treturn{\n\t\t\tselectedItem:arrOfInputedData,\n\t\t}\t\t\t  \n\t  });\n\t  \n  }\n  \n  render() {\n\t  \n    return (\n      <div className=\"App\">\n\t  <SimpleStorage parent={this} />\n\t  <div className=\"addToForm\">\n\t  <h3>Add task:</h3>\n\t\t\t<AddTodoForm handleClick={this.addToDo}/>\n\t\t</div>\n\t\t<div className=\"listOfToDo\">\n\t\t<h3>TO DO:</h3>\n\t\t\t{this.state.items.map((item,index)=><ListOfToDo item={item} key={index} handleCheckbox={this.handleCheckbox} handleClick={this.deleteToDo}/>)}\n\t\t\t\t\n\t\t</div>\n\t\t<div className=\"listOfCompletedToDo\">\n\t\t<h3>DONE:</h3>\n\t\t{this.state.selectedItem.map((items,index) => <CompletedTodos compliteditem={items} key={index}  handleClick={this.deleteCompletedToDo}/>)}\n        </div>\n\t\t\n\t\t</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}